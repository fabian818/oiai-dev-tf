redis-ha:
  enabled: true

controller:
  replicas: 1

server:
  replicas: 2

repoServer:
  replicas: 2
  repoServer:

  initContainers:
    - name: helm-aws-s3
      image: alpine/helm:3.12.2
      volumeMounts:
        - name: helm-working-dir
          mountPath: /helm-working-dir

      env:
        - name: HELM_CACHE_HOME
          value: /helm-working-dir
        - name: HELM_CONFIG_HOME
          value: /helm-working-dir
        - name: HELM_DATA_HOME
          value: /helm-working-dir
      command: [ "/bin/sh", "-c" ]
      args:
        - apk --no-cache add curl;
          helm plugin install https://github.com/hypnoglow/helm-s3.git;
          rm -rf /helm-working-dir/plugins/https-github.com-hypnoglow-helm-s3.git;
          helm repo add postgres s3://custom-helm-charts/stable/postgres;
          chmod -R 777 $HELM_DATA_HOME;

applicationSet:
  replicas: 2

global:
  domain: ${domain***REMOVED***

configs:
  params:
    server.insecure: true

server:
  ingress:
    enabled: true
    controller: aws
    ingressClassName: alb
    annotations:
      alb.ingress.kubernetes.io/scheme: internet-facing
      alb.ingress.kubernetes.io/target-type: ip
      alb.ingress.kubernetes.io/backend-protocol: HTTP
      alb.ingress.kubernetes.io/listen-ports: '[{"HTTPS":80***REMOVED***, {"HTTPS":443***REMOVED***]'
      alb.ingress.kubernetes.io/ssl-redirect: '443'
      alb.ingress.kubernetes.io/certificate-arn: '${certificate_arn***REMOVED***'
    aws:
      serviceType: ClusterIP
      backendProtocolVersion: GRPC